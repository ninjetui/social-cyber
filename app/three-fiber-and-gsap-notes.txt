three fiber concepts
- scene
- camera
- lights
- mesh
- materials
- geometry
- raycasting
- controls
- postprocessing
- loaders
- animations
- physics
- shaders
- events
- textures
- audio
- performance
- debugging
- examples
- resources

gsap concepts
- tween
- timeline
- stagger
- scrolltrigger
- splittext
- motionpath
- draggable
- inertia
- utils
- plugins
- examples
- resources

three fiber basic example
- create a scene
- add a camera
- add a light
- add a mesh
- add a material
- add a geometry
- render the scene

gsap basic example
- create a tween
- create a timeline
- create a stagger
- create a scrolltrigger
- create a splittext
- create a motionpath
- create a draggable
- create an inertia
- create a utils
- create a plugin
- create an example
- create a resource

three fiber basic code example
create a scene in nextJS application
------------------------
import { Canvas } from 'react-three-fiber'
import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'
import { PerspectiveCamera, Scene, AmbientLight, Mesh, BoxGeometry, MeshBasicMaterial } from
'three'
import { useFrame } from 'react-three-fiber'
import { useEffect } from 'react'
import { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'
import { useLoader } from 'react-three-fiber'
import { TextureLoader } from 'three/src/loaders/TextureLoader'
import { useTexture } from '@react-three/drei'
import { useAnimations } from '@react-three/drei'
import { useGLTFAnimations } from '@react-three/drei'
import { useGLTFLoader } from '@react-three/drei'
import { useGLTF } from '@react-three/drei'

const Scene = () => {
  return (
    <Canvas>
      <PerspectiveCamera position={[0, 0, 5]} />
      <Scene>
        <AmbientLight intensity={0.5} />
        <Mesh>
          <BoxGeometry args={[1, 1, 1]} />
          <MeshBasicMaterial color='red' />
        </Mesh>
      </Scene>
    </Canvas>
  )
}

export default Scene

gsap basic code example

create a tween in nextJS application
------------------------
import { useEffect } from 'react'
import { useRef } from 'react'
import { gsap } from 'gsap'
import { ScrollTrigger } from 'gsap/ScrollTrigger'

const Tween = () => {
  const ref = useRef()

  useEffect(() => {
    gsap.to(ref.current, {
      duration: 1,
      x: 100,
      y: 100,
      rotation: 360,
      scale: 2,
      ease: 'power2.inOut',
      repeat: -1,
      yoyo: true,
    })
  }, [])

  return <div ref={ref}>Hello World</div>
}

export default Tween

three fiber scene, camera, light, material and geometry types?
- scene: a container for all objects in the scene
- camera: a perspective or orthographic camera
- light: a directional, point, spot or ambient light
- material: a basic, depth, line, mesh, points, shader, sprite or standard material
- geometry: a box, circle, cone, cylinder, dodecahedron, icosahedron, lathe, octahedron, plane, polyhedron, ring, shape, sphere, tetrahedron, text, torus, torus knot, tube or wireframe geometry

three fiber positioning system basics?
- x: left to right
- y: bottom to top
- z: back to front



scene
camera
lights